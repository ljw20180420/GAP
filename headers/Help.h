#ifndef HELP_H
#define HELP_H
void help()
{
    std::cout << "-h\tdisplay help\n"
              << "--index\tindex genome\n"
              << "-r\tindex the reverse complement (false)\n"
              << "-f\tthe fasta or fastq file to index\n"
              << "---run\trun name\n"
              << "---reads\tread files\n"
              << "---threads_sz\tnumber of threads for alignment (24)\n"
              << "---max_round\tmaximal number of times to extend alignment segments (0)\n"
              << "---max_extract\tmaximal number of best alignments to extract (1)\n"
              << "---diff_thres\tthe minimal bps necessary to consider two alignments as different (10)\n"
              << "---max_range\tthe maximal number of alignment positions to display for each segment (10)\n"
              << "---min_seg_num\tthe minimal number of alignment segments, 0 means no restriction (0)\n"
              << "---max_seg_num\tthe maximal number of alignment segments, 0 means no restriction (0)\n"
              << "---max_mega\tthe maximal number of steps in tracking the alignment graph (10000)\n"
              << "---block_size\tthe size of the read blocks passed to worker threads (100)\n"
              << "---nodes\tnodes of the alignment graph\n"
              << "\t--names\tnode names\n"
              << "\t--ves\tgap open penalties of insertions at nodes (0.0)\n"
              << "\t--ues\tgap extend penalties of insertions at nodes (0.0)\n"
              << "---roots\troot names\n"
              << "---targets\ttarget names\n"
              << "---locals\tlocal edges of short references without index\n"
              << "\t--gammas\tmatch/mismatch scores of local edges (1.0, -3.0)\n"
              << "\t--names\tlocal edge names\n"
              << "\t--tails\tlocal edge tail node names\n"
              << "\t--heads\tlocal edge head node names\n"
              << "\t--ves\tgap open penalties of insertions at local edges (-5.0)\n"
              << "\t--ues\tgap extend penalties of insertions at local edges (-2.0)\n"
              << "\t--vfs\tgap open penalties of deletions at local edges (-5.0)\n"
              << "\t--ufs\tgap extend penalties of deletions at local edges (-2.0)\n"
              << "\t--Ts\tbasic alignment penalties at local edges (-10.0)\n"
              << "\t--dTs\tincrements of basic alignment penalties at local edges (-5.0)\n"
              << "\t--min_score\tminimal alignment scores at local edges (20.0)\n"
              << "\t--vfps\tgap open penalties of deletions at the beginning of local edges (0.0)\n"
              << "\t--ufps\tgap extend penalties of deletions at the beginning of local edges (0.0)\n"
              << "\t--vfms\tgap open penalties of deletions at the end of local edges (0.0)\n"
              << "\t--ufms\tgap extend penalties of deletions at the end of local edges (0.0)\n"
              << "---globals\tglobal edges of long references with index\n"
              << "\t--gammas\tmatch/mismatch scores of global edges (1.0, -3.0)\n"
              << "\t--names\tglobal edge names\n"
              << "\t--tails\tglobal edge tail node names\n"
              << "\t--heads\tglobal edge head node names\n"
              << "\t--ves\tgap open penalties of insertions at global edges (-5.0)\n"
              << "\t--ues\tgap extend penalties of insertions at global edges (-2.0)\n"
              << "\t--vfs\tgap open penalties of deletions at global edges (-5.0)\n"
              << "\t--ufs\tgap extend penalties of deletions at global edges (-2.0)\n"
              << "\t--Ts\tbasic alignment penalties at global edges (-10.0)\n"
              << "\t--dTs\tincrements of basic alignment penalties at global edges (-5.0)\n"
              << "\t--min_score\tminimal alignment scores at global edges (20.0)\n"
              << "\t--r\twhether align to the reverse complements of global edges\n"
              ;
}
#endif